class Solution {
    public List<Integer> partitionLabels(String s) {
        if (s.length() == 1){
            List<Integer> tmp = new ArrayList<>();
            tmp.add(1);
            return tmp;
        }
        HashSet<Character> set = new HashSet<>();
        for (char c : s.toCharArray()){
            if (!set.contains(c)){
                set.add(c);
            }
        }
        int[][] arr = new int[set.size()][2];
        int i = 0;
        for (Character c : set){
            arr[i][0] = s.indexOf(c);
            arr[i][1] = s.lastIndexOf(c);
            i++;
        }
        Arrays.sort(arr, (int[] a, int[] b) -> a[0] - b[0]);
        int right = arr[0][1];
        int left = arr[0][0];
        List<Integer> ans = new ArrayList<>();
        for (int j = 1; j < arr.length; j++){
            if (arr[j][0] > right){
                ans.add(right - left + 1);
                right = arr[j][1];
                left = arr[j][0];
            }else if (arr[j][1] > right){
                right = arr[j][1];
            }
        }
        ans.add(right - left + 1);
        return ans;
    }
}
